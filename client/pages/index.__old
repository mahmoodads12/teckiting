import axios from 'axios';
import Link from 'next/link';

const LandingPage = ({ currentUser }) => {
  console.log('Client Side!');
  console.log(currentUser);
  return (
    <div className="text-bg-primary p-3">
      <div className="container text-center d-flex justify-content-end">
        <div className="row">
          <div className="col"></div>

          <Link href="/auth/signup" style={{ color: 'white' }}>
            Sign Up
          </Link>
        </div>
      </div>
    </div>
  );
};

// hier is the Server Side; it will used for Example to fetch Data During SSR (Server Side Rendering)!
// this is the only way to fetch Data during SSR
// why did you use axios and not use-request ? -> because Hooks are used in Components and hier in server side is not component

LandingPage.getInitialProps = async ({ req }) => {
  if (typeof window === 'undefined') {
    // we are on Server
    // requests should be made to 'http://SERVICENAME.NAMESPACE.svc.cluster.local'
    // to detect namespace we should give this command: kubectl get namespace -> ingress-nginx
    // to detect service in namespace we should give this command: kubectl get service -n ingress-nginx
    console.log(req.headers || null);

    const { data } = await axios
      .get(
        'http://ingress-nginx-controller.ingress-nginx.svc.cluster.local/api/users/currentuser',
        {
          headers: req.headers,
        },
        {
          withCredentials: true, // Cookies einbeziehen
        }
      )
      .catch((err) => {
        console.log(err.message);
      });
    console.log(data);
    return data;
    // in the data we have currentuser
  } else {
    try {
      const { data } = await axios.get('/api/users/currentuser', {
        withCredentials: true, // Cookies einbeziehen
      });
      console.log(data);
      return data;
      // in the data we have currentuser
    } catch (err) {
      console.error(err);
      return data;
    }
  }
};

export default LandingPage;
